name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0, v1.2.3, etc.
  pull_request:
    branches:
      - main
      - master

permissions:
  contents: write
  actions: read

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Extract version from tag
        id: get_version
        run: |
          if ("${{ github.event_name }}" -eq "push" -and "${{ github.ref }}" -like "refs/tags/*") {
            $tagName = "${{ github.ref_name }}"
            $version = $tagName -replace '^v', ''
            echo "version=$version" >> $env:GITHUB_OUTPUT
            echo "Extracted version: $version"
          } else {
            $version = "0.0.0-dev"
            echo "version=$version" >> $env:GITHUB_OUTPUT
            echo "Using development version: $version"
          }

      - name: Update package.json version (temporary for build)
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          $packageJson = Get-Content package.json | ConvertFrom-Json
          $packageJson.version = $version
          $packageJson | ConvertTo-Json -Depth 10 | Set-Content package.json
          echo "Updated package.json version to: $version (temporary for build only)"

      - name: Install client dependencies
        run: npm ci

      - name: Build Electron app
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip Client Build
        run: |
          Compress-Archive -Path dist/*.exe,dist/*.yml -DestinationPath client-build.zip

      - name: Upload build artifacts (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: client-build-pr-${{ github.event.number }}
          path: |
            client-build.zip
            dist/*.exe
            dist/*.yml

      - name: Upload release assets (Tag only)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            client-build.zip
            dist/*.exe
            dist/*.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
